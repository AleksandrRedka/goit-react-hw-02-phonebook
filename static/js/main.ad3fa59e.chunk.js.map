{"version":3,"sources":["transition/transitionPop.module.css","components/ListContacts/ListContacts.module.css","components/AddContacts/AddContacts.module.css","components/Phonebook/Phonebook.module.css","components/Logo/Logo.module.css","transition/transitionSlide.module.css","components/SearchContact/SearchContact.module.css","transition/transitionDescent.module.css","components/Logo/Logo.js","components/helpers/toast.js","redux/contacts/contactsActions.js","redux/contacts/contactsSelectors.js","redux/formAddContact/formAddContactActions.js","redux/formAddContact/formAddContactSelectors.js","components/AddContacts/AddContacts.js","redux/searchValue/searchValueSelectors.js","redux/searchValue/searchValueActions.js","components/SearchContact/SearchContact.js","components/ListContacts/ListContacts.js","components/Phonebook/Phonebook.js","redux/contacts/contactsReducers.js","redux/formAddContact/formAddContactReducers.js","redux/searchValue/searchValueReducers.js","redux/store.js","components/App/App.js","index.js"],"names":["module","exports","Logo","useState","transition","setTransition","useEffect","CSSTransition","in","timeout","classNames","transitionSlide","className","styles","logo","toastShow","text","typeToast","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Type","getContacts","state","contacts","items","changeName","name","type","payload","changeNumber","number","getName","formContact","getNumber","generateId","shortid","generate","AddContacts","useSelector","contactsSelectors","formAddContactSelectors","dispatch","useDispatch","handleChangeInput","target","formAddContactActions","value","transitionPop","addContact","formCreate","onSubmit","e","contact","preventDefault","some","c","trim","toLowerCase","contactsActions","id","htmlFor","placeholder","onChange","autoComplete","getsearchValue","searchValue","SearchContact","searchValueSelectors","searchInput","searchValueActions","ListContacts","handleDelete","length","transitionDescent","unmountOnExit","wrapperListContact","TransitionGroup","component","listContact","map","key","contactItem","btnDelete","onClick","Phonebook","filter","localContacts","JSON","parse","localStorage","getItem","setItem","stringify","filteredContacts","includes","filterContacts","container","combineReducers","searchValueReduser","rootReducer","contactsReducers","formContactReducers","searchValueReducers","store","createStore","devToolsEnhancer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad3fa59e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitionPop_enter__2uob-\",\"enterActive\":\"transitionPop_enterActive__1cCNi\",\"exit\":\"transitionPop_exit__3yNjC\",\"exitActive\":\"transitionPop_exitActive__7pOMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperListContact\":\"ListContacts_wrapperListContact__1EolT\",\"listContact\":\"ListContacts_listContact__3FunH\",\"contactItem\":\"ListContacts_contactItem__15rHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact\":\"AddContacts_addContact__2LxXd\",\"formCreate\":\"AddContacts_formCreate__3tOTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__Yb216\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1Ev9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitionSlide_enter__Isohw\",\"enterActive\":\"transitionSlide_enterActive__1-yKg\",\"exit\":\"transitionSlide_exit__3gmhO\",\"exitActive\":\"transitionSlide_exitActive__2TBFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchContact_searchInput__2EqFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitionDescent_enter__3VRi6\",\"enterActive\":\"transitionDescent_enterActive__rlSjA\",\"exit\":\"transitionDescent_exit__2Rvdt\",\"exitActive\":\"transitionDescent_exitActive__37beL\"};","import React, { useState, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Logo.module.css';\nimport transitionSlide from '../../transition/transitionSlide.module.css';\n\nconst Logo = () => {\n  const [transition, setTransition] = useState(false);\n\n  useEffect(() => setTransition(true), []);\n\n  return (\n    <CSSTransition in={transition} timeout={700} classNames={transitionSlide}>\n      <h1 className={styles.logo}>Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Logo;\n","import { toast } from 'react-toastify';\n\nconst toastShow = (text, typeToast) => {\n  toast[typeToast](`${text}`, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n  });\n};\n\nexport default toastShow;\n","export const Type = {\n  FETCH_CONTACTS: 'FETCH_CONTACTS',\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n};\n\n//* FETCH - CONTACTS  *//\n\nexport const fetchContact = contacts => ({\n  type: Type.FETCH_CONTACTS,\n  payload: { contacts },\n});\n\n//* ADD - CONTACT *//\nexport const addContact = contact => ({\n  type: Type.ADD_CONTACT,\n  payload: { contact },\n});\n\n// DELETE - CONTACT\nexport const deleteContact = id => ({\n  type: Type.DELETE_CONTACT,\n  payload: { id },\n});\n","export const getContacts = state => state.contacts.items;\nexport const a = () => null;\n","export const Type = {\n  CHANGE_NAME: 'CHANGE_NAME',\n  CHANGE_NUMBER: 'CHANGE_NUMBER',\n  CREATE_CONTACT: 'CREATE_CONTACT',\n};\n\nexport const changeName = name => ({\n  type: Type.CHANGE_NAME,\n  payload: name,\n});\n\nexport const changeNumber = number => ({\n  type: Type.CHANGE_NUMBER,\n  payload: number,\n});\n\nexport const createContact = contact => ({\n  type: Type.CREATE_CONTACT,\n  payload: contact,\n});\n","export const getName = state => state.formContact.name;\nexport const getNumber = state => state.formContact.number;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n// Helpers\nimport shortid from 'shortid';\nimport toastShow from '../helpers/toast';\n// Operation and Action in Redux\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport * as contactsSelectors from '../../redux/contacts/contactsSelectors';\n\nimport * as formAddContactActions from '../../redux/formAddContact/formAddContactActions';\nimport * as formAddContactSelectors from '../../redux/formAddContact/formAddContactSelectors';\n// Styles\nimport styles from './AddContacts.module.css';\nimport transitionPop from '../../transition/transitionPop.module.css';\n\nconst generateId = () => shortid.generate();\nconst AddContacts = () => {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const name = useSelector(formAddContactSelectors.getName);\n  const number = useSelector(formAddContactSelectors.getNumber);\n  const [transition, setTransition] = useState(false);\n\n  const dispatch = useDispatch();\n  useEffect(() => setTransition(true), []);\n\n  const handleChangeInput = ({ target }) => {\n    if (target.name === 'name') {\n      dispatch(formAddContactActions.changeName(target.value));\n    }\n    if (target.name === 'number') {\n      dispatch(formAddContactActions.changeNumber(target.value));\n    }\n  };\n\n  const validContact = contact => {\n    if (name !== '' && number !== '') {\n      const thisNewContact = contacts.some(\n        c => c.name.trim().toLowerCase() === contact.name.trim().toLowerCase(),\n      );\n      if (!thisNewContact) {\n        return true;\n      }\n      return toastShow('❌ Контакт с таким именем уже существует!', 'error');\n    }\n    toastShow('⛔️ Вы не заполнили все поля!', 'error');\n    return false;\n  };\n\n  const handleCreateContact = e => {\n    e.preventDefault();\n    if (validContact({ name, number })) {\n      dispatch(\n        contactsActions.addContact({\n          id: generateId(),\n          name: name.trim(),\n          number: number.trim(),\n        }),\n      );\n      dispatch(formAddContactActions.changeName(''));\n      dispatch(formAddContactActions.changeNumber(''));\n      toastShow('✅ Контакт добавлен', 'success');\n    }\n  };\n\n  return (\n    <CSSTransition in={transition} timeout={500} classNames={transitionPop}>\n      <div className={styles.addContact}>\n        <h3>Add Contact</h3>\n        <form className={styles.formCreate} onSubmit={handleCreateContact}>\n          <label htmlFor={generateId()}>\n            Name\n            <input\n              type=\"text\"\n              placeholder=\"Name contact\"\n              name=\"name\"\n              value={name}\n              onChange={handleChangeInput}\n              autoComplete=\"off\"\n            />\n          </label>\n          <label htmlFor={generateId()}>\n            Number\n            <input\n              type=\"number\"\n              placeholder=\"Number contact\"\n              name=\"number\"\n              value={number}\n              onChange={handleChangeInput}\n              autoComplete=\"off\"\n            />\n          </label>\n          <button type=\"submit\">Add Contacts</button>\n        </form>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default AddContacts;\n","export const getsearchValue = state => state.searchValue;\nexport const a = null;\n","export const Type = {\n  CHANGE_SEARCH_VALUE: 'CHANGE_SEARCH_VALUE',\n};\n\nexport const changeSearchValue = value => ({\n  type: Type.CHANGE_SEARCH_VALUE,\n  payload: {\n    value,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport { CSSTransition } from 'react-transition-group';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './SearchContact.module.css';\nimport transitionPop from '../../transition/transitionPop.module.css';\nimport * as searchValueSelectors from '../../redux/searchValue/searchValueSelectors';\nimport * as searchValueActions from '../../redux/searchValue/searchValueActions';\n\nconst generateId = () => shortid.generate();\n\nconst SearchContact = () => {\n  const dispatch = useDispatch();\n  const [transition, setTransition] = useState(false);\n  const value = useSelector(searchValueSelectors.getsearchValue);\n  useEffect(() => setTransition(true), []);\n  return (\n    <>\n      <CSSTransition in={transition} timeout={500} classNames={transitionPop}>\n        <label className={styles.searchInput} htmlFor={generateId()}>\n          Find contacts by name\n          <input\n            type=\"text\"\n            placeholder=\"Enter name contact\"\n            name=\"filter\"\n            value={value}\n            onChange={e =>\n              dispatch(searchValueActions.changeSearchValue(e.target.value))\n            }\n            autoComplete=\"off\"\n          />\n        </label>\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default SearchContact;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport toastShow from '../helpers/toast';\n\n// Animation and styles\n\nimport styles from './ListContacts.module.css';\nimport transitionPop from '../../transition/transitionPop.module.css';\nimport transitionDescent from '../../transition/transitionDescent.module.css';\n\n// Redux Actions\n\nimport * as contactsActions from '../../redux/contacts/contactsActions';\n\nconst ListContacts = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  const [transition, setTransition] = useState(false);\n\n  useEffect(() => setTransition(true), []);\n\n  const handleDelete = id => {\n    dispatch(contactsActions.deleteContact(id));\n    toastShow('✅ Контакт успешно удален!', 'success');\n  };\n  return (\n    contacts.length > 0 && (\n      <CSSTransition\n        in={transition}\n        timeout={700}\n        classNames={transitionDescent}\n        unmountOnExit\n      >\n        <div className={styles.wrapperListContact}>\n          <TransitionGroup component=\"ul\" className={styles.listContact}>\n            {contacts.map(contact => (\n              <CSSTransition\n                key={contact.id}\n                timeout={500}\n                classNames={transitionPop}\n                unmountOnExit\n              >\n                <li className={styles.contactItem}>\n                  <p>{contact.name}</p>\n                  <p>{contact.number}</p>\n                  <button\n                    type=\"button\"\n                    className={styles.btnDelete}\n                    onClick={() => handleDelete(contact.id)}\n                  >\n                    &#65794;\n                  </button>\n                </li>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </div>\n      </CSSTransition>\n    )\n  );\n};\n\nListContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ListContacts;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Phonebook.module.css';\nimport Logo from '../Logo/Logo';\nimport AddContacts from '../AddContacts/AddContacts';\nimport SearchContact from '../SearchContact/SearchContact';\nimport ListContacts from '../ListContacts/ListContacts';\nimport * as searchValueSelectors from '../../redux/searchValue/searchValueSelectors';\nimport * as contactsSelectors from '../../redux/contacts/contactsSelectors';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name\n      .trim()\n      .toLowerCase()\n      .includes(filter.trim().toLowerCase()),\n  );\n};\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(searchValueSelectors.getsearchValue);\n\n  useEffect(() => {\n    const localContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (localContacts) {\n      dispatch(contactsActions.fetchContact(localContacts));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  // handleCreateContacts = contact => {\n  //   const { contacts } = this.state;\n  //   const thisNewContact = contacts.some(\n  //     c => c.name.trim().toLowerCase() === contact.name.trim().toLowerCase(),\n  //   );\n  //   if (!thisNewContact) {\n  //     this.setState(s => ({\n  //       contacts: [...s.contacts, contact],\n  //     }));\n  //     toastShow('✅ Контакт Добавлен!', 'success');\n  //   } else {\n  //     toastShow('❌ Контакт с таким именем уже существует!', 'error');\n  //   }\n  // };\n\n  // const handleDeleteContact = id => {\n  //   dispatch(contactsOperation.deleteContacts(id));\n  //   toastShow('✅ Контакт успешно удален!', 'success');\n  // };\n  const filteredContacts = filterContacts(contacts, filter);\n  return (\n    <div className={styles.container}>\n      <Logo />\n      <AddContacts />\n\n      {contacts.length > 1 && (\n        <>\n          <h3>Search Contact</h3>\n          <SearchContact />\n        </>\n      )}\n      {filteredContacts.length > 0 && (\n        <div>\n          <h2>Contacts</h2>\n          <ListContacts contacts={filteredContacts} />\n        </div>\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import { combineReducers } from 'redux';\nimport { Type } from './contactsActions';\n\nconst contactsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.FETCH_CONTACTS:\n      return payload.contacts;\n    case Type.ADD_CONTACT:\n      return [...state, payload.contact];\n    case Type.DELETE_CONTACT:\n      return state.filter(contact => contact.id !== payload.id);\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  items: contactsReducer,\n});\n","import { combineReducers } from 'redux';\nimport { Type } from './formAddContactActions';\n\nconst nameReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case Type.CHANGE_NAME:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nconst numberReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case Type.CHANGE_NUMBER:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name: nameReducer,\n  number: numberReducer,\n});\n","import { Type } from './searchValueActions';\n\nconst searchValueReduser = (state = '', { type, payload }) => {\n  switch (type) {\n    case Type.CHANGE_SEARCH_VALUE:\n      return payload.value;\n\n    default:\n      return state;\n  }\n};\n\nexport default searchValueReduser;\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport contactsReducers from './contacts/contactsReducers';\nimport formContactReducers from './formAddContact/formAddContactReducers';\nimport searchValueReducers from './searchValue/searchValueReducers';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducers,\n  formContact: formContactReducers,\n  searchValue: searchValueReducers,\n});\n\n// const enhanser = applyMiddleware(logger);\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Phonebook from '../Phonebook/Phonebook';\nimport store from '../../redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Phonebook />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}